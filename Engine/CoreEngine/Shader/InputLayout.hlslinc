struct VertexIn_2D
{
	float3 Pos : POSITION;	// NDC(local) 좌표
	float2 UV : TEXCOORD0;	// TexCoord 좌표
	float4 Color : COLOR;	// 정점 컬러(대부분은 사용 안함)
};

struct PixelInput_2D
{
	float4 Pos : SV_POSITION;
	float4 Color : COLOR0;
	float2 UV : TEXCOORD0;
};

struct VertexIn_3D
{
	float3 Pos : POSITION;	// NDC(local) 좌표
	float2 UV : TEXCOORD0;	// TexCoord 좌표
	float4 Color : COLOR;
	float3 Normal : NORMAL;	// 법선 벡터
};

struct VertexOut_3D
{
	float4 Pos : SV_POSITION;
	float2 UV : TEXCOORD0;
	float3 Normal : NORMAL;
};

struct PixelInput_3D
{
	float4 Pos : SV_POSITION;
	float2 UV : TEXCOORD0;
	float3 Normal : NORMAL;
	uint   ID : SV_PrimitiveID;
};

struct VertexIn_Base
{
	float3 Pos : POSITION;	// NDC(local) 좌표
	float2 TexCoord : TEXCOORD0;	// TexCoord 좌표
	float4 VertexColor : COLOR;	// 정점 컬러(대부분은 사용 안함)

	float3 Normal : NORMAL;	// 법선 벡터
	float3 Tangent : TANGENT;	// 접선 벡터
	float3 Binormal : BINORMAL;	// 이접 벡터

	float4 BoneIndices : INDEX;
	float4 BoneWeights : WEIGHT;
};

struct FMaterialInstance
{
	float4 BaseColor : MAT_BASECOLOR;
	float  AO : MAT_SPECULAR;
	float  Roughness : MAT_ROUGHNESS;
	float  Metallic : MAT_METALLIC;
	float  Emissive : MAT_EMISSIVE;
	uint   Flag : MAT_TEXTUREFLAG;
};

struct InstanceData
{
	row_major matrix  InstancePos : INST_TRANSFORM;
	FMaterialInstance Material : INST_MAT;
};

struct PixelIn_Base
{
	float4 ClipSpace : SV_POSITION;
	float4 WorldSpace : POSITION;
	float4 VertexColor : COLOR0;
	float2 TexCoord : TEXCOORD0;

	float3 ViewDir : TEXCOORD1;

	float3 Normal : TEXCOORD2;
	float3 Tangent : TEXCOORD3;
	float3 Binormal : TEXCOORD4;

	FMaterialInstance Material : MATERIAL;
};
